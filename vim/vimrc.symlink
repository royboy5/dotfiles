filetype plugin indent on
syntax on

" keeps 1000 items in history
set history=1000

" enable ruler
set ruler

" shows incomplete cmds
set showcmd

" shows autocomplete menu
set wildmenu

" shows line numbers
set number

" shows highlight search
set hlsearch
set incsearch

" ignores case in search
set ignorecase

" use case if capital is detected
set smartcase

" line wrap
set lbr

" auto indent enabled
set ai

" smart indent enabled
set si

" shift and tab spaces
set shiftwidth=2
set tabstop=2

" tabs as spaces
set expandtab

set encoding=utf-8
set clipboard=unnamedplus

" vim-searchindex
" git clone https://github.com/google/vim-searchindex.git ~/.vim/pack/plugins/start/vim-searchindex
set shortmess-=S

" NERDTree
" ========
" git clone https://github.com/scrooloose/nerdtree.git ~/.vim/pack/plugins/start/nerdtree
" vim -u NONE -c "helptags ~/.vim/pack/plugins/start/nerdtree/doc" -c q

" Ctrl-n to toggle
map <C-n> :NERDTreeToggle<CR>

" show hidden files
let NERDTreeShowHidden=1

" Coc
" ===
" git clone https://github.com/neoclide/coc.nvim.git ~/.vim/pack/plugins/start/coc

" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config.
inoremap <silent><expr> <TAB>
    \ pumvisible() ? "\<C-n>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
    let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~# '\s'
endfunction


" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Use K to show documentation in preview window.
" nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction

