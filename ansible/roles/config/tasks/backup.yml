---
# Backup all dotfiles to .rc.old directory

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.rc.old" 
    state: directory
    mode: '0755'

- name: Check for rc files
  block:
    - name: Check for .tmux.conf
      stat:
        path: "{{ ansible_env.HOME }}/.tmux.conf"
      register: tmux 

    - name: Report .tmux.conf
      debug:
        msg: "Found .tmux.conf"
      when: tmux.stat.exists

    - name: Check for .zshenv
      stat:
        path: "{{ ansible_env.HOME }}/.zshenv"
      register: zshenv 

    - name: Report .zshenv
      debug:
        msg: "Found .zshenv"
      when: zshenv.stat.exists

    - name: Check for .zshrc
      stat:
        path: "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc

    - name: Report .zshrc
      debug:
        msg: "Found .zshrc"
      when: zshrc.stat.exists

- name: Move rc files to .rc.old
  block:
    - name: Copy .tmux.conf to .rc.old
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/.tmux.conf"
        dest: "{{ ansible_env.HOME }}/.rc.old/.tmux.conf"
        backup: yes
        force: no
      when: tmux.stat.exists and not tmux.stat.islnk

    - name: Remove .tmux.conf
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.tmux.conf"
        state: absent
      when: tmux.stat.exists

    - name: Copy .zshenv to .rc.old
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/.zshenv"
        dest: "{{ ansible_env.HOME }}/.rc.old/.zshenv"
        backup: yes
        force: no
      when: zshenv.stat.exists

    - name: Remove .zshenv
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.zshenv"
        state: absent
      when: zshenv.stat.exists

    - name: Copy .zshrc to .rc.old
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/.zshrc"
        dest: "{{ ansible_env.HOME }}/.rc.old/.zshrc"
        backup: yes
        force: no
      when: zshrc.stat.exists

    - name: Remove .zshrc
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: absent
      when: zshrc.stat.exists
...
